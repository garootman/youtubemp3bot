# Use an official Python runtime as a parent image
FROM python:3.13-slim

# Copy & install requirements file for scripts
COPY ../scripts/requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# Copy & install tgmediabot library
COPY ../tgmediabot /app/tgmediabot
RUN pip install --no-cache-dir /app/tgmediabot

# install ffmpeg
RUN apt-get update && apt-get install -y ffmpeg

# Copy scripts into container at /app
COPY ../scripts /app/scripts

# Arguments for build
ARG POSTGRES_URL
ARG REDIS_URL
ARG REDIS_PASSWORD
ARG GOOGLE_API_KEY
ARG TG_TOKEN
ARG ADMIN_ID
ARG PROXY_TOKEN
ARG ENV
ARG PAY_LINK

# Set environment variables for runtime
ENV POSTGRES_URL=$POSTGRES_URL
ENV REDIS_URL=$REDIS_URL
ENV REDIS_PASSWORD=$REDIS_PASSWORD
ENV TG_TOKEN=$TG_TOKEN
ENV ADMIN_ID=$ADMIN_ID
ENV PROXY_TOKEN=$PROXY_TOKEN
ENV ENV=$ENV
ENV GOOGLE_API_KEY=$GOOGLE_API_KEY
ENV PAY_LINK=$PAY_LINK

# Install pytest
RUN pip install pytest

# Copy tests into container at /app
COPY ../tests /app/tests

# Ensure environment variables are available during pytest run
WORKDIR /app
RUN export POSTGRES_URL=$POSTGRES_URL \
    REDIS_URL=$REDIS_URL \
    REDIS_PASSWORD=$REDIS_PASSWORD \
    TG_TOKEN=$TG_TOKEN \
    ADMIN_ID=$ADMIN_ID \
    PROXY_TOKEN=$PROXY_TOKEN \
    ENV=$ENV  \
    GOOGLE_API_KEY=$GOOGLE_API_KEY \
    PAY_LINK=$PAY_LINK 



    
# Run tests
# RUN pytest tests

# Set the working directory to /app/scripts
WORKDIR /app/scripts

CMD ["python", "mybot.py"]
